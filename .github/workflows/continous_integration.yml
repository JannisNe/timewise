# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more tap_jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Specify the python versions to test
    strategy:
      matrix:
        python-version: ["3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get SciServer-Python repo
        uses: actions/checkout@v2
        with:
          repository: JannisNe/SciScript-Python
          path: SciScript-Python

      # Set up the python versions
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

     # Setting up dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m poetry install -E dev
          poetry run pip install setuptools
          cd SciScript-Python
          poetry run python Install.py sciserver-v2.1.0
          cd ..

      - name: build ampel config
        run: |
          poetry run ampel config build -out ampel_config.yml -distributions ampel timewise -stop-on-errors 0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0

      # Runs a set of commands using the runners shell
      - name: Test the code
        env:
          SDSS_USERID: ${{ secrets.SDSS_USERID }}
          SDSS_USERPW: ${{ secrets.SDSS_USERPW }}
          TIMEWISE_DATA: ~/timewise_data
          TIMEWISE_BIGDATA: ~/timewise_bigdata
        run: |
          poetry run coverage run -m pytest ./tests
          poetry run coverage combine

      - name: Run Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ success() }} && (github.ref == 'refs/heads/master')
        run: poetry run coveralls
